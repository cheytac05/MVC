package com.golab.edgewrite_mvc.hashTables;

import java.util.Hashtable;

/**
 * Created by keiichi on 15/08/03.
 */
public class HashTable1 {
    String m;
    String key2;//int型のkeyをstring型に変換
    String key3;
    String key4;

    //keyの番号とhtの番号の同じである文字をkey2に入れる部分．sumには角に到達した回数？？
    public String hashtable(int key, int sum) {
        key2 = Integer.toString(key);//int型のkeyをstring型に変換

        Hashtable<String, String> ht = new Hashtable<String, String>();


        ht.put("12828", "あ");
        ht.put("12818", "あ");

        ht.put("2824", "い");
        ht.put("2818", "い");

        ht.put("8124", "う");
        ht.put("1818124", "う");
        ht.put("18181248", "う");
        ht.put("1812818", "う");

        ht.put("12148", "え");
        ht.put("12184", "え");
        ht.put("121812", "え");
        ht.put("12412", "え");
        ht.put("841812", "え");
        ht.put("84184", "え");
        ht.put("842412", "え");
        ht.put("842484", "え");


        ht.put("12428", "お");
        ht.put("121828", "お");
        ht.put("124128", "お");
        ht.put("841828", "お");
        ht.put("842428", "お");


        ht.put("12418", "か");
        ht.put("12424", "か");

        ht.put("121214", "き");
        ht.put("128414", "き");
        ht.put("841214", "き");
        ht.put("848414", "き");
        ht.put("121218", "き");
        ht.put("12124", "き");

        ht.put("18128", "く");
        ht.put("8128", "く");
        ht.put("28248", "く");


        ht.put("28428", "け");

        ht.put("1248", "こ");
        ht.put("12412", "こ");
        ht.put("8421", "こ");

        ht.put("1218124", "さ");
        ht.put("1218128", "さ");
        ht.put("1218128", "さ");
        ht.put("1218248", "さ");
        ht.put("12181248", "さ");
        ht.put("121828", "さ");
        ht.put("841824", "さ");
        ht.put("841818", "さ");
        ht.put("842418", "さ");

        ht.put("14142", "し");
        ht.put("141482", "し");
        ht.put("121282", "し");
        ht.put("1414842", "し");
        ht.put("1212182", "し");
        ht.put("1414248", "し");

        //ht.put("1281","す");

        ht.put("12184", "せ");
        ht.put("128184", "せ");
        ht.put("1242184", "せ");
        ht.put("824184", "せ");
        ht.put("82184", "せ");

        ht.put("14248", "そ");
        ht.put("1828", "そ");

        ht.put("1812814", "た");
        ht.put("1812124", "た");
        ht.put("812814", "た");
        ht.put("282814", "た");
        ht.put("2812814", "た");


        ht.put("2128", "ち");
        ht.put("28424", "ち");
        ht.put("28418", "ち");
        ht.put("281218", "ち");
        ht.put("28124", "ち");
        // ht.put("28428","ち");
        ht.put("212824", "ち");
        ht.put("282824", "ち");
        ht.put("212128", "ち");
        ht.put("284848", "ち");

        //ht.put("1818128","つ");
        ht.put("141428", "つ");
        ht.put("1414128", "つ");
        ht.put("181828", "つ");
        ht.put("1414248", "つ");

        ht.put("12124", "て");
        ht.put("128428", "て");
        ht.put("848428", "て");

        ht.put("184", "と");
        ht.put("1814", "と");
        ht.put("2414", "と");

        ht.put("124", "な");
        ht.put("1218", "な");
        ht.put("8418", "な");
        ht.put("8424", "な");
        ht.put("8428", "な");

        ht.put("1284", "に");
        ht.put("1212", "に");
        ht.put("8412", "に");
        ht.put("8484", "に");
        ht.put("121284", "に");

        ht.put("128214", "ぬ");

        ht.put("12824", "ね");
        ht.put("181282414", "ね");
        ht.put("18128241", "ね");
        ht.put("181281814", "ね");
        ht.put("181282424", "ね");
        ht.put("1212814", "ね");
        ht.put("1281814", "ね");
        ht.put("1412814", "ね");
        ht.put("282414", "ね");


        ht.put("28", "の");

        ht.put("1818", "は");
        ht.put("2814", "は");

        ht.put("2184", "ひ");
        ht.put("84184", "ひ");
        ht.put("28148", "ひ");
        ht.put("28184", "ひ");
        ht.put("184812", "ひ");

        ht.put("814", "へ");
        ht.put("824", "へ");

        ht.put("1242814", "ほ");
        ht.put("1282424", "ほ");
        ht.put("1242824", "ほ");
        ht.put("12182814", "ほ");
        ht.put("12181814", "ほ");
        ht.put("121282424", "ほ");


        ht.put("12818", "ま");

        ht.put("141414", "み");
        ht.put("121418", "み");
        ht.put("121284", "み");
        ht.put("121212", "み");
        ht.put("121484", "み");
        ht.put("121284", "み");
        ht.put("18484", "み");

        ht.put("2842", "む");
        ht.put("28414", "む");
        ht.put("1841", "む");
        ht.put("2841", "む");
        ht.put("28424", "む");
        ht.put("284", "む");
        ht.put("18424", "む");

        // ht.put("2814","め");//はと同じ

        ht.put("1212184", "も");


        ht.put("12814", "や");
        ht.put("12818", "や");
        ht.put("8218", "や");
        ht.put("8214", "や");
        ht.put("82414", "や");
        ht.put("1214", "や");
        ht.put("82418", "や");
        ht.put("82814", "や");
        ht.put("82418", "や");

        ht.put("12484", "ゆ");

        ht.put("124848", "よ");
        ht.put("1248484", "よ");
        ht.put("1212124", "よ");
        ht.put("121248", "よ");
        ht.put("1212484", "よ");
        ht.put("2121248", "よ");
        ht.put("8421212", "よ");
        ht.put("1248421", "よ");
        ht.put("8421212", "よ");

        ht.put("12128", "ら");


        ht.put("2424", "り");
        ht.put("2418", "り");
        ht.put("18248", "り");
        ht.put("1828", "り");

        ht.put("18182", "る");
        ht.put("18142", "る");
        ht.put("24182", "る");
        ht.put("28242", "る");
        ht.put("28142", "る");
        ht.put("18184", "る");
        ht.put("18242", "る");
        ht.put("28182", "る");

        ht.put("182", "れ");

        ht.put("12481", "ろ");
        ht.put("81248", "ろ");
        ht.put("24812", "ろ");
        ht.put("48124", "ろ");
        ht.put("21842", "ろ");
        ht.put("42184", "ろ");
        ht.put("18421", "ろ");
        ht.put("84218", "ろ");

        ht.put("18124", "わ");
        ht.put("8128", "わ");

        ht.put("12812", "を");
        ht.put("124212", "を");
        ht.put("128212", "を");

        ht.put("142", "ん");
        ht.put("1482", "ん");
        ht.put("1484", "ん");
        ht.put("14182", "ん");
        ht.put("14842", "ん");
        ht.put("141842", "ん");
        ht.put("1282", "ん");

        //入力手順が等しい場合
        ht.put("12818", "あま");

        ht.put("12824", "あす");

        ht.put("28128", "くけ");

        ht.put("18128", "くけわ");

        ht.put("12484", "えゆ");

        ht.put("12412", "こゆ");

        ht.put("12814", "すぬま");

        ht.put("12184", "えひ");

        ht.put("12128", "てらを");

        ht.put("1814", "とは");

        ht.put("12428", "おか");

        ht.put("1428", "そめ");

        ht.put("82121", "てら");

        ht.put("1818128", "うつ");

        ht.put("181248", "うけろ");

        ht.put("128", "なふ");

        ht.put("2814", "はめ");

        ht.put("1824", "はり");

        ht.put("124218", "かや");

        ht.put("18124", "りわ");

        ht.put("81248", "けろ");
        //backspace
        ht.put("21", "backs");
        //全消し
        ht.put("48", "delete");
        //スペース
        ht.put("12", "space");

        m = ht.get(key2);

        //角の多い場合，かつkeyと該当する文字が無かった場合
        if (sum >= 7 && m == null) {
            key3 = key2.substring(sum - 3);//key2の末尾を抽出,画数の多い文字の判別に使用
            key4 = key2.substring(0, 3);//key2の末尾を抽出,画数の多い文字の判別に使用

            if (key3.equals("814") && sum >= 7)
                m = "ね";
            else if (key3.equals("128"))
                m = "う";
            else if (key3.equals("184"))
                m = "も";
                //else if (key4.equals("124") && sum == 7)
                // m = "よ";
            else if (key4.equals("181") && sum >= 7)
                m = "ね";
            else if (sum >= 8)
                m = "ねほ";
        }


        //m = "aaa";
        return m;
    }
}
